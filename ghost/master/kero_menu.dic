KeroMenuGreetings : nonoverlap
{
	"\1Hi."
	"\1What's up?"
}

//Because there is an all modifier here, you don't need to write -- between menu options
OnKeroMenu : all
{
	"\1\b[2]\![set,autoscroll,disable]"
	if SHIORI3FW.Eventid == "OnMouseDoubleClick"; KeroMenuGreetings //The check here is so they won't comment if you click the back button. Remove if you prefer
	"\n\n\_q%(shelf)"
	
	//Put anything you want here, anything at all. For example, here's how you can add your own menu... You can make as many like this as you want! Uncomment if you want to test it out, or erase if you don't want it
	//"\![*]\q[Some menu option,OnSomeMenu]\n\n"
	
	"\![*]\q[Nevermind,blank]"
}

/*
OnSomeMenu : all
{
	"\1Some other menu."
	"\n\n\_q"
	
	//Presumably more fun stuff here. Ask the character questions? Bug report information? Minigames? Utilities? Puzzles? Anything you can think of! Just make up a name for your menu function that starts with On, and put it in the \q tag like in the menu above
	
	"\![*]\q[Back to main menu,OnKeroMenu]\n"
	"\![*]\q[Nevermind,blank]"
}
*/

strToQuestionMarks{
	_res = ""
	_start = _argv[0]
	for _i = 0; _i < STRLEN(_start); _i++{
		if SUBSTR(_start,_i,1) == " "{
			_res += " "
		}else{
			_res += "?"
		}
	}
	_res
}


OnShiniesMenu : all {
	inmenu = 0
	"\_q\b[2]\![set,autoscroll,disable]"
	_database = "ShinyData" + origin
	for _i = 0; _i < ARRAYSIZE(ShinyDataNormal); _i++{
		
		_thisitem = EVAL("%(_database)[_i]")
		if _thisitem == ""{
			_thisitem = ShinyDataNormal[_i]
		}
		if shiniesarray[_i] == 0{
			_qver = strToQuestionMarks(_thisitem[0])
			"%_qver\n"
		}else{
			"%(_thisitem[0])\n"
		}
	
	}

}




OnAdditionsMenu : all{
	inmenu = 0
	_database = "ShinyData" + origin
	//SYRUPS
	"\b[2]\_qSYRUPS%(tallstack)\n"
	for _i = 0; _i < ARRAYSIZE(ShinyDataNormal); _i++{
		_thisitem = EVAL("%(_database)[_i]")
		if _thisitem == ""{
			_thisitem = ShinyDataNormal[_i]
		}
		if _thisitem[2] == "Syrups"{
			if shiniesarray[_i] == 0{
				_qver = strToQuestionMarks(_thisitem[3])
				"%_qver\n"
			}else{
				if syrup != _thisitem[4]{
					"\![*]\q[%(_thisitem[3]),OnChangeSyrup,%(_thisitem[2]),%(_thisitem[4])]\n"
				}else{
					"\![*]\q[%(_thisitem[3]),OnChangeSyrup,%(_thisitem[2]),'']\n"
				}
				
			}
			
		}
	
	}
	"\n\n[half]TOPPINGS\n"
	//TOPPINGS
	for _i = 0; _i < ARRAYSIZE(ShinyDataNormal); _i++{
		_thisitem = EVAL("%(_database)[_i]")
		if _thisitem == ""{
			_thisitem = ShinyDataNormal[_i]
		}
		if _thisitem[2] == "Toppings"{
			if shiniesarray[_i] == 0{
				_qver = strToQuestionMarks(_thisitem[3])
				"%_qver\n"
			}else{
				if topping != _thisitem[4]{
					"\![*]\q[%(_thisitem[3]),OnChangeTopping,%(_thisitem[2]),%(_thisitem[4])]\n"
				}else{
					"\![*]\q[%(_thisitem[3]),OnChangeTopping,%(_thisitem[2]),'']\n"
				}
				
			}
			
		}
	
	}
		
	
	
	"\n\n[half]%(nvm)    \![*]\q[Back,OnMainMenu]"

}

//Argv[0] is the category, argv[1] is the addition ending
OnChangeAddition{
	EVAL(_argv[0] + "=" + '"' + _argv[1] + '"')

}

OnChangeSyrup{
	syrup = reference1
	OnAdditionsMenu
}

OnChangeTopping{
	topping = reference1
	OnAdditionsMenu
}
