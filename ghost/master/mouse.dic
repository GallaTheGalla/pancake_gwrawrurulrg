//Separate from the menus because you could put other interactions here, like poking or booping or punching or asking about various hotspots
OnMouseDoubleClick
{
	inmenu = 0
	if reference5 == 0 //reference5 is the mouse button being clicked, in this case a left click
	{
		//reference3 is which character is being clicked
		//If you want to add double click interactions, reference4 will be the name of the hitbox the mouse is over
		if reference3 == 0
		{
			//OnSakuraMenu
			
			if clicktype == 1{
				OnClick(1)
				--
				"\_q%(tallstack)total pancakes: %TOINT(pancakes)"
			}
			
		}
		else
		{
			//OnKeroMenu
			OnMainMenu
		}
	}
}

OnMouseClick
{
	inmenu = 0
	if reference5 == 0 //reference5 is the mouse button being clicked, in this case a left click
	{
		//reference3 is which character is being clicked
		if reference3 == 0
		{
			//OnSakuraMenu
			
			if clicktype == 0{
				OnClick(1)
				--
				"\_q%(tallstack)total pancakes: %TOINT(pancakes)"
			}
			
		}
		
	}
}

OnClick{
	pancakes += getTotalClickMult * TOINT(_argv[0])
	

}

OnMouseMove
{
	if reference4 != ""
	{
		stroke++
		
		if stroke % 40 == 0
		{
			if reference3 == 0; OnMouseMove.Sakura
			else; OnMouseMove.Kero
		}
	}
}

OnMouseMove.Sakura
{
	if reference4 == "head"
	{
		"%(tallstack)Petting??"
	}
}

OnMouseMove.Kero
{
	if reference4 == "head"
	{
		"\1\s[10]Petting..."
	}
}

OnMouseLeaveAll
{
	stroke = 0
}



OnSecondChange{
	pancakes += getSecCakes
	if second % 5 == 0{
		OnClick(TOINT(toolsarray[0]))
	}
	/*
	if second % 3 == 0{
		case inmenu{
			when 1{
				"\![unlock,balloonrepaint]%(OnMainMenu)"
			}
			when 2{
				"\![unlock,balloonrepaint]%(OnUpgradesMenu)"
			}	
			when 3{
				"\![unlock,balloonrepaint]%(OnToolsMenu)"
			}
		}
	}
	*/

}

getSecCakes{
	_res = 0
	for _i = 1; _i < ARRAYSIZE(ToolsData); _i++{
		_info = ToolsData[_i]
		_res += toolsarray[_i] * TOREAL(_info[3]/10) 
	
	}
	_res
}



